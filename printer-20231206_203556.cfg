# This file contains common pin mappings for the Fysetc Cheetah v2.0
# board. To use this config, the firmware should be compiled for the
# STM32F401 with "No bootloader" and Communication interface USB

# After running "make", run the following command to flash the board:
# dfu-util -R -a 0 -s 0x08000000:leave -D out/klipper.bin

# See docs/Config_Reference.md for a description of parameters.
#
[include heatsoak.cfg]
[include filter.cfg]
[include V0Display.cfg]

[mcu]
#####################################################################
#	Obtain mcu value by "ls -l /dev/serial/by-id/" 
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712891DD58-if00
#serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.5:1.0


[mcu rpi]
serial: /tmp/klipper_host_mcu

## can0
[mcu can0]
canbus_uuid: cff44a2436dc

## can0
[temperature_sensor CANBOARD]
sensor_type: temperature_mcu
sensor_mcu: can0

#[mcu expander]
#serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_070032000C43303054313620-if00

#[mcu ampon]
#serial: /dev/serial/by-id/usb-Anchor_Ampon-if00
#
#[adxl345]
#cs_pin: ampon:CS

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 60, 60, 20

## ADXL345
[adxl345]
cs_pin: can0:PB12
spi_software_sclk_pin: can0:PB10
spi_software_mosi_pin: can0:PB11
spi_software_miso_pin: can0:PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    60,60,20

[input_shaper]
#shaper_freq_x: 78.2
#shaper_type_x: mzv
#shaper_freq_y: 67.6
#shaper_type_y: mzv

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 16400
max_z_velocity: 15
max_z_accel: 350
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 16
endstop_pin: tmc2209_stepper_x:virtual_endstop
full_steps_per_rotation: 200                 # Set to 400 for 0.9 degree stepper motor, 200 is for 1.8 stepper motors
position_endstop: 120
position_max: 120
homing_speed: 41                             # Was 20 initially, needs to be bigger than rotation_distance icm klipper_tmc_autotune
#homing_speed: 20                             # Was 20 initially, needs to be bigger than rotation_distance icm klipper_tmc_autotune
homing_retract_dist: 0

[tmc2209 stepper_x]
diag_pin: ^gpio4
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: false
run_current: 0.85
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0 #250            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#driver_SGTHRS: 64		# gets set by tmc autotune

[stepper_y]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 16
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 41                             # Was 20 initially, needs to be bigger than rotation_distance icm klipper_tmc_autotune
#homing_speed: 20                             # Was 20 initially, needs to be bigger than rotation_distance icm klipper_tmc_autotune
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
diag_pin: ^gpio3
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: false
run_current: 0.85                             # For V0.1 spec NEMA14 40Ncm
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0 #250             # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#driver_SGTHRS: 64		# gets set by tmc autotune

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28	# Remove ! if moving opposite direction
enable_pin: !gpio2
rotation_distance: 8 #for T8x8 lead screw
#rotation_distance: 2 #for T8x2 lead screw
microsteps: 16
endstop_pin: ^gpio25
#position_endstop: 120
position_max: 120
position_min: -1.5
homing_speed: 10   #Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: false
run_current: 0.37                              # For V0.1 spec NEMA17 w/ integrated lead screw
hold_current: 0.35
sense_resistor: 0.110
stealthchop_threshold: 999999                     # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: can0:PD0
dir_pin: can0:PD1	                     # Add ! if moving opposite direction
enable_pin: !can0:PD2
full_steps_per_rotation: 200         # 1.8 degree motor
rotation_distance: 22.215             # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                    # For Mini Afterburner
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: can0:PB13
sensor_type: Generic 3950
sensor_pin: can0:PA3
#control: pid                         # Do PID calibration
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 286
min_extrude_temp: 0
max_extrude_only_distance: 210
max_extrude_cross_section: 3
pressure_advance: 0.03                # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: can0:PA15
#tx_pin: PA2
#uart_address: 3
#interpolate: False
#run_current: 0.85
run_current: 0.6
#sense_resistor: 0.110
stealthchop_threshold: 0

[heater_bed]
heater_pin: gpio21
sensor_type: Generic 3950
#sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.76                         # Only need this for 100w pads
min_temp: 0
max_temp: 120
#control: pid                            # Do PID calibration
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

[heater_fan hotend_fan]
# FAN1 Connector
pin: can0:PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0                         # You can't PWM the delta fan unless using blue wire
#

[fan]
# Print Cooling Fan: FAN0 Connector
pin: can0:PA0
max_power: 1.0
kick_start_time: 0.5
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
#off_below: 0.13
cycle_time: 0.010

[fan_generic filter]
pin: gpio18
max_power: 1.0
kick_start_time: 0.5
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
#off_below: 0.13
cycle_time: 0.010

[controller_fan controller_fan]
pin: gpio20 
kick_start_time: 0.5
heater: heater_bed, extruder
fan_speed: 1.0
max_power: 1.0
idle_timeout: 60

[idle_timeout]
timeout: 1800

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor pico]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=<5V>,  EXP1_3=<RST>, EXP1_5=PA7,  EXP1_7=PA4,  EXP1_9=PA5,
    EXP1_2=<GND>, EXP1_4=PC3,   EXP1_6=PC11, EXP1_8=PC10, EXP1_10=PA6,

    # EXP2 header
    EXP2_1=<5V>,  EXP2_3=PB7, EXP2_5=PB14, EXP2_7=PB12, EXP2_9=PC12,
    EXP2_2=<GND>, EXP2_4=PB6, EXP2_6=PB13, EXP2_8=PB15, EXP2_10=PC9,

    # EXP3 header
    EXP3_1=PC9,  EXP3_3=PC10, EXP3_5=PC11, EXP3_7=PB12, EXP3_9=<GND>,
    EXP3_2=PC12, EXP3_4=PB14, EXP3_6=PB13, EXP3_8=PB15, EXP3_10=<5V>,
    # Pins EXP3_4, EXP3_8, EXP3_6 are also MISO, MOSI, SCK of bus "spi2"

    # Lights
    LIGHT_OUTPUT=gpio17

#[safe_z_home]
#home_xy_position: 120,120
#speed: 50.0
#z_hop: 5

[homing_override]
axes: xyz
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

# Tool to help adjust bed leveling screws. One may define a
# [bed_screws] config section to enable a BED_SCREWS_ADJUST g-code
# command.
[bed_screws]
screw1: 60,5
#screw1: 65,5
screw1_name: front screw
screw2: 5,115
#screw2: 10,110
screw2_name: back left
screw3: 115,115
#screw3: 120,110
screw3_name: back right

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]
[display_status]
[exclude_object]
[respond]

[autotune_tmc stepper_x]
motor: fysetc-35hsh7402-24b-60a
sg4_thrs: 130
[autotune_tmc stepper_y]
motor: fysetc-35hsh7402-24b-60a
sg4_thrs: 130

[autotune_tmc stepper_z]
motor: fysetc-42hsc1404b-200n8

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg

#####################################################################
#   LED Control
#####################################################################

[output_pin light]
pin: LIGHT_OUTPUT
pwm: true
value: 20
scale: 100
cycle_time: 0.010

[neopixel bed]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.05
initial_BLUE: 0

#####################################################################
#	Macros
#####################################################################


[gcode_macro LIGHT_OFF]
gcode:
    set_pin pin=light value=0

[gcode_macro LIGHT_ON]
gcode:
    {% set S = params.S|default(50)|float %}
    set_pin pin=light value={S}

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set MATERIAL = params.MATERIAL|default("PLA")|string %}

    LIGHT_ON S=40
    M117 Preheating...
    M140 S{BED_TEMP}   
    M104 S{EXTRUDER_TEMP}
    G28
    G1 Z20 F3000
    G1 X1 Y1 F10000
    G1 Z0.2 F3000

    M117 Heating...
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_TEMP}

    # 7 ----- MATERIAL PARAMETERS --------------------------------
    # Material dependant parameters like PA, firmware retraction, Z_offset, etc...
    {% if MATERIAL == "PLA" %}
	#SET_GCODE_OFFSET Z_ADJUST=+0.07 MOVE=1
        SET_PRESSURE_ADVANCE ADVANCE=0.05
#        SET_RETRACTION RETRACT_LENGTH=0.75 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
#    {% elif MATERIAL == "PET" %}
#        SET_PRESSURE_ADVANCE ADVANCE=0.0650
#        SET_GCODE_OFFSET Z_ADJUST=0.010 MOVE=1
#        SET_RETRACTION RETRACT_LENGTH=1.4 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
    {% elif MATERIAL == "ASA" %}
#	SET_GCODE_OFFSET Z_ADJUST=-0.04 MOVE=1
        SET_PRESSURE_ADVANCE ADVANCE=0.02
#        SET_RETRACTION RETRACT_LENGTH=0.5 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
#        {% if filter_enabled %} # if a filter is available, we start it for ASA
#            START_FILTER SPEED=0.8
#	    BEDFANSFAST
#        {% endif %}
    {% elif MATERIAL == "ABS" %}
#	SET_GCODE_OFFSET Z_ADJUST=-0.04 MOVE=1
        SET_PRESSURE_ADVANCE ADVANCE=0.02
#        SET_RETRACTION RETRACT_LENGTH=0.5 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
#        {% if filter_enabled %} # if a filter is available, we start it for ABS
#            START_FILTER SPEED=0.8
#	    BEDFANSFAST
#        {% endif %}
    {% endif %}
    
    M117 Purging...
    G1 E4 F3600                
    G1 X60 E9 F1000          
    G1 X100 E12 F500          
    G1 X120 F2000
    G92 E0      

    M117
    LIGHT_ON S=20

   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    

    G1 E-1.7 F2100                 ; retract filament
    G91                            ; relative positioning

    # Default material type to 'XXX'
    {% set MATERIAL = params.MATERIAL|default("XXX")|string %}

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    
    ; G90                            ; absolute positioning
    _TOOLHEAD_PARK_PAUSE_CANCEL
    ; G0 X{max_x} Y{max_y} F3600          ; park nozzle at rear
    
    _TIP_SHAPING
    ; Retract filament
    G1 E-10 F2100
   
    M104 S0 ; Turn off Extruder
    M107                           ; turn off fan
    LIGHT_ON S=20
    M84				   ; turn off steppers

    #START_FILTER_TIMER TIME=600

    {% if printer.heater_bed.temperature > 70 %}
        M118 Start gradual bed cooling ({printer.heater_bed.temperature}C).
        M118 reduce temp to ({printer.heater_bed.temperature - 5 }C).
        M140 S{ printer.heater_bed.target - 5 }
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=300
    {% else %}
        M118 No Gradual bed cooling necessary ({printer.heater_bed.temperature}C).
        M140 S0 ; turn off bed
        M81 ; disable Power
        M118 Print Complete!
    {% endif %}

[delayed_gcode gradual_cooldown]
gcode:
    {% if printer.heater_bed.target > 40 %}
        M118 reduce temp to ({printer.heater_bed.target - 5 }C).
        M140 S{ printer.heater_bed.target - 5 }
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=300
    {% else %}
        M118 Gradual bed cooling finished ({printer.heater_bed.temperature}C).
        M140 S0 ; turn off bed
        M118 Print Complete!
    {% endif %}
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

    _TIP_SHAPING
    ; Retract filament
    G1 E-10 F2100
   
    M104 S0 ; Turn off Extruder
    M107                           ; turn off fan

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro _TIP_SHAPING]
description: Filament tip shaping sequence
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_extruder_temp)|float %}

    SAVE_GCODE_STATE NAME=TIP_SHAPING_state
    _LOW_TEMP_CHECK T={TEMP}

    M82
    G92 E0
    G1 E2 F3600
    G1 E0 F3600
    G1 E3 F3600
    G1 E0 F3600
    G1 E4 F3600
    G1 E0 F3600

    RESTORE_GCODE_STATE NAME=TIP_SHAPING_state

[gcode_macro _LOW_TEMP_CHECK]
description: Check the nozzle is at temperature and heat it if needed
gcode:
    {% set T = params.T|default(printer["gcode_macro _USER_VARIABLES"].print_default_extruder_temp)|float %}

    {% if printer.extruder.target != 0 %}
        {% if printer.extruder.temperature < printer.extruder.target %}
            M109 S{printer.extruder.target|float}
        {% endif %}
    {% else %}
        {% if printer.extruder.target < T %}
            M109 S{T}
        {% endif %}
    {% endif %}

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#[include bedScrewMenu.cfg]

# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950" (Keenovo Heater Pad)
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32"
#   "AD595"
#   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 56.426
#*# pid_ki = 3.135
#*# pid_kd = 253.915
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.316
#*# pid_ki = 1.328
#*# pid_kd = 77.709
#*#
#*# [stepper_z]
#*# position_endstop = 115.406
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 75.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 74.6
